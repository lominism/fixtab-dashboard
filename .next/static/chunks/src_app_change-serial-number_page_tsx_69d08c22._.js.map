{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/lom2mba/Documents/Developer/next/fixtab-dashboard/src/app/change-serial-number/page.tsx"],"sourcesContent":["\"use client\";\n\nimport React, { useState, useEffect } from \"react\";\nimport {\n  Table,\n  TableBody,\n  TableCaption,\n  TableCell,\n  TableHead,\n  TableHeader,\n  TableRow,\n} from \"@/components/ui/table\";\nimport BranchTable from \"@/components/BranchTable\";\nimport { useBreadcrumb } from \"@/context/BreadcrumbContext\";\n\ntype Branch = {\n  id: number;\n  name: string;\n  address: string;\n  city: string;\n  items: number;\n};\n\ntype Company = {\n  id: number;\n  name: string;\n  address: string;\n  branches: number;\n  branchFile: string | null;\n};\n\nexport default function ChangeSerialNumber() {\n  const { setBreadcrumb } = useBreadcrumb();\n  const [companies, setCompanies] = useState<Company[]>([]);\n  const [selectedCompany, setSelectedCompany] = useState<Company | null>(null);\n  const [branches, setBranches] = useState<Branch[] | null>(null);\n\n  // Fetch companies data on mount\n  useEffect(() => {\n    const fetchCompanies = async () => {\n      try {\n        const response = await fetch(\"/data/companies.json\");\n        if (!response.ok) {\n          throw new Error(\"Failed to fetch companies data\");\n        }\n        const data = await response.json();\n        setCompanies(data);\n      } catch (error) {\n        console.error(\"Error fetching companies:\", error);\n      }\n    };\n\n    fetchCompanies();\n  }, []);\n\n  // Update breadcrumb when selectedCompany changes\n  useEffect(() => {\n    setBreadcrumb(\n      selectedCompany ? `Companies -> ${selectedCompany.name}` : \"Companies\"\n    );\n  }, [selectedCompany, setBreadcrumb]);\n\n  // Function to handle company click and dynamically load branches\n  const handleCompanyClick = async (\n    branchFile: string | null,\n    company: Company\n  ) => {\n    if (!branchFile) {\n      // Stay on company page if no branchFile is provided\n      window.location.href = \"/change-serial-number\";\n      return;\n    }\n\n    try {\n      const response = await fetch(`/data/${branchFile}`);\n      if (!response.ok) {\n        throw new Error(\"Failed to fetch branch data\");\n      }\n      const branchData = await response.json();\n      setBranches(branchData);\n      setSelectedCompany(company); // Set the selected company\n    } catch (error) {\n      console.error(\"Failed to load branch data:\", error);\n      // Redirect to the homepage if fetching fails\n      window.location.href = \"/\";\n    }\n  };\n\n  // Function to go back to the company list\n  const handleBackToCompanies = () => {\n    setBranches(null);\n    setSelectedCompany(null);\n  };\n\n  return (\n    <main className=\"m-4\">\n      {branches ? (\n        <>\n          <button\n            onClick={handleBackToCompanies}\n            className=\"mb-4 text-blue-500 underline\"\n          >\n            Back to Companies\n          </button>\n          <BranchTable branches={branches} />\n        </>\n      ) : companies.length > 0 ? (\n        <Table>\n          <TableCaption>A list of your companies.</TableCaption>\n          <TableHeader>\n            <TableRow>\n              <TableHead>ID</TableHead>\n              <TableHead>Name</TableHead>\n              <TableHead>Address</TableHead>\n              <TableHead># of Branches</TableHead>\n            </TableRow>\n          </TableHeader>\n          <TableBody>\n            {companies.map((company) => (\n              <TableRow\n                key={company.id}\n                onClick={() => handleCompanyClick(company.branchFile, company)}\n                className=\"cursor-pointer\"\n              >\n                <TableCell>{company.id}</TableCell>\n                <TableCell>{company.name}</TableCell>\n                <TableCell>{company.address}</TableCell>\n                <TableCell>{company.branches}</TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      ) : (\n        <p>Loading companies...</p>\n      )}\n    </main>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}