{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/lom2mba/Documents/Developer/next/fixtab-dashboard/src/components/ui/table.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Table({ className, ...props }: React.ComponentProps<\"table\">) {\n  return (\n    <div\n      data-slot=\"table-container\"\n      className=\"relative w-full overflow-x-auto\"\n    >\n      <table\n        data-slot=\"table\"\n        className={cn(\"w-full caption-bottom text-sm\", className)}\n        {...props}\n      />\n    </div>\n  )\n}\n\nfunction TableHeader({ className, ...props }: React.ComponentProps<\"thead\">) {\n  return (\n    <thead\n      data-slot=\"table-header\"\n      className={cn(\"[&_tr]:border-b\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction TableBody({ className, ...props }: React.ComponentProps<\"tbody\">) {\n  return (\n    <tbody\n      data-slot=\"table-body\"\n      className={cn(\"[&_tr:last-child]:border-0\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction TableFooter({ className, ...props }: React.ComponentProps<\"tfoot\">) {\n  return (\n    <tfoot\n      data-slot=\"table-footer\"\n      className={cn(\n        \"bg-muted/50 border-t font-medium [&>tr]:last:border-b-0\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction TableRow({ className, ...props }: React.ComponentProps<\"tr\">) {\n  return (\n    <tr\n      data-slot=\"table-row\"\n      className={cn(\n        \"hover:bg-muted/50 data-[state=selected]:bg-muted border-b transition-colors\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction TableHead({ className, ...props }: React.ComponentProps<\"th\">) {\n  return (\n    <th\n      data-slot=\"table-head\"\n      className={cn(\n        \"text-foreground h-10 px-2 text-left align-middle font-medium whitespace-nowrap [&:has([role=checkbox])]:pr-0 [&>[role=checkbox]]:translate-y-[2px]\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction TableCell({ className, ...props }: React.ComponentProps<\"td\">) {\n  return (\n    <td\n      data-slot=\"table-cell\"\n      className={cn(\n        \"p-2 align-middle whitespace-nowrap [&:has([role=checkbox])]:pr-0 [&>[role=checkbox]]:translate-y-[2px]\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction TableCaption({\n  className,\n  ...props\n}: React.ComponentProps<\"caption\">) {\n  return (\n    <caption\n      data-slot=\"table-caption\"\n      className={cn(\"text-muted-foreground mt-4 text-sm\", className)}\n      {...props}\n    />\n  )\n}\n\nexport {\n  Table,\n  TableHeader,\n  TableBody,\n  TableFooter,\n  TableHead,\n  TableRow,\n  TableCell,\n  TableCaption,\n}\n"],"names":[],"mappings":";;;;;;;;;;;AAIA;AAJA;;;AAMA,SAAS,MAAM,EAAE,SAAS,EAAE,GAAG,OAAsC;IACnE,qBACE,8OAAC;QACC,aAAU;QACV,WAAU;kBAEV,cAAA,8OAAC;YACC,aAAU;YACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;YAC9C,GAAG,KAAK;;;;;;;;;;;AAIjB;AAEA,SAAS,YAAY,EAAE,SAAS,EAAE,GAAG,OAAsC;IACzE,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,mBAAmB;QAChC,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,UAAU,EAAE,SAAS,EAAE,GAAG,OAAsC;IACvE,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,YAAY,EAAE,SAAS,EAAE,GAAG,OAAsC;IACzE,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,2DACA;QAED,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,SAAS,EAAE,SAAS,EAAE,GAAG,OAAmC;IACnE,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,+EACA;QAED,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,UAAU,EAAE,SAAS,EAAE,GAAG,OAAmC;IACpE,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,sJACA;QAED,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,UAAU,EAAE,SAAS,EAAE,GAAG,OAAmC;IACpE,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,0GACA;QAED,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,aAAa,EACpB,SAAS,EACT,GAAG,OAC6B;IAChC,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,sCAAsC;QACnD,GAAG,KAAK;;;;;;AAGf","debugId":null}},
    {"offset": {"line": 125, "column": 0}, "map": {"version":3,"sources":["file:///Users/lom2mba/Documents/Developer/next/fixtab-dashboard/src/components/BranchTable.tsx"],"sourcesContent":["\"use client\";\n\nimport {\n  Table,\n  TableBody,\n  TableCaption,\n  TableCell,\n  TableHead,\n  TableHeader,\n  TableRow,\n} from \"@/components/ui/table\";\nimport React from \"react\";\n\ntype Branch = {\n  id: number;\n  name: string;\n  address: string;\n  city: string;\n  items: number;\n  productFile: string | null; // Ensure this property exists\n};\n\ntype BranchTableProps = {\n  branches: Branch[];\n  onBranchClick: (productFile: string | null) => void;\n};\n\nexport default function BranchTable({\n  branches,\n  onBranchClick,\n}: BranchTableProps) {\n  return (\n    <Table>\n      <TableCaption>A list of your branches.</TableCaption>\n      <TableHeader>\n        <TableRow>\n          <TableHead className=\"w-[100px]\">ID</TableHead>\n          <TableHead>Name</TableHead>\n          <TableHead>Address</TableHead>\n          <TableHead>City</TableHead>\n          <TableHead># of Items</TableHead>\n        </TableRow>\n      </TableHeader>\n      <TableBody>\n        {branches.map((branch) => (\n          <TableRow\n            key={branch.id}\n            onClick={() =>\n              branch.productFile && onBranchClick(branch.productFile)\n            } // Only call onBranchClick if productFile is not null\n            className={`cursor-pointer hover:bg-gray-100 ${\n              branch.productFile ? \"\" : \"cursor-not-allowed text-gray-400\"\n            }`} // Disable pointer and style for branches with null productFile\n          >\n            <TableCell className=\"font-medium\">{branch.id}</TableCell>\n            <TableCell>{branch.name}</TableCell>\n            <TableCell>{branch.address}</TableCell>\n            <TableCell>{branch.city}</TableCell>\n            <TableCell>{branch.items}</TableCell>\n          </TableRow>\n        ))}\n      </TableBody>\n    </Table>\n  );\n}\n"],"names":[],"mappings":";;;;AAEA;AAFA;;;AA2Be,SAAS,YAAY,EAClC,QAAQ,EACR,aAAa,EACI;IACjB,qBACE,8OAAC,iIAAA,CAAA,QAAK;;0BACJ,8OAAC,iIAAA,CAAA,eAAY;0BAAC;;;;;;0BACd,8OAAC,iIAAA,CAAA,cAAW;0BACV,cAAA,8OAAC,iIAAA,CAAA,WAAQ;;sCACP,8OAAC,iIAAA,CAAA,YAAS;4BAAC,WAAU;sCAAY;;;;;;sCACjC,8OAAC,iIAAA,CAAA,YAAS;sCAAC;;;;;;sCACX,8OAAC,iIAAA,CAAA,YAAS;sCAAC;;;;;;sCACX,8OAAC,iIAAA,CAAA,YAAS;sCAAC;;;;;;sCACX,8OAAC,iIAAA,CAAA,YAAS;sCAAC;;;;;;;;;;;;;;;;;0BAGf,8OAAC,iIAAA,CAAA,YAAS;0BACP,SAAS,GAAG,CAAC,CAAC,uBACb,8OAAC,iIAAA,CAAA,WAAQ;wBAEP,SAAS,IACP,OAAO,WAAW,IAAI,cAAc,OAAO,WAAW;wBAExD,WAAW,CAAC,iCAAiC,EAC3C,OAAO,WAAW,GAAG,KAAK,oCAC1B;;0CAEF,8OAAC,iIAAA,CAAA,YAAS;gCAAC,WAAU;0CAAe,OAAO,EAAE;;;;;;0CAC7C,8OAAC,iIAAA,CAAA,YAAS;0CAAE,OAAO,IAAI;;;;;;0CACvB,8OAAC,iIAAA,CAAA,YAAS;0CAAE,OAAO,OAAO;;;;;;0CAC1B,8OAAC,iIAAA,CAAA,YAAS;0CAAE,OAAO,IAAI;;;;;;0CACvB,8OAAC,iIAAA,CAAA,YAAS;0CAAE,OAAO,KAAK;;;;;;;uBAZnB,OAAO,EAAE;;;;;;;;;;;;;;;;AAkB1B","debugId":null}},
    {"offset": {"line": 258, "column": 0}, "map": {"version":3,"sources":["file:///Users/lom2mba/Documents/Developer/next/fixtab-dashboard/src/components/ProductTable.tsx"],"sourcesContent":["\"use client\";\n\nimport React from \"react\";\nimport {\n  Table,\n  TableBody,\n  TableCaption,\n  TableCell,\n  TableHead,\n  TableHeader,\n  TableRow,\n} from \"@/components/ui/table\";\n\ntype Product = {\n  id: number;\n  name: string;\n  serial: string;\n  inventory: number;\n  branch: string;\n  image: string;\n};\n\ntype ProductTableProps = {\n  products: Product[];\n};\n\nexport default function ProductTable({ products }: ProductTableProps) {\n  return (\n    <Table>\n      <TableCaption>Product List limited to 30.</TableCaption>\n      <TableHeader>\n        <TableRow>\n          <TableHead className=\"w-[100px]\">Image</TableHead>\n          <TableHead className=\"w-[100px]\">ID</TableHead>\n          <TableHead>Name</TableHead>\n          <TableHead>Serial Number</TableHead>\n          <TableHead className=\"text-left\">Inventory</TableHead>\n          <TableHead>Branch</TableHead>\n        </TableRow>\n      </TableHeader>\n      <TableBody>\n        {products.map((product) => (\n          <TableRow key={product.id} className=\"h-[80px]\">\n            <TableCell>\n              <img\n                src={product.image}\n                alt={product.name}\n                className=\"h-16 w-16 object-cover rounded\"\n              />\n            </TableCell>\n            <TableCell className=\"font-medium\">{product.id}</TableCell>\n            <TableCell>{product.name}</TableCell>\n            <TableCell>{product.serial}</TableCell>\n            <TableCell className=\"text-left\">{product.inventory}</TableCell>\n            <TableCell>{product.branch}</TableCell>\n          </TableRow>\n        ))}\n      </TableBody>\n    </Table>\n  );\n}\n"],"names":[],"mappings":";;;;AAGA;AAHA;;;AA0Be,SAAS,aAAa,EAAE,QAAQ,EAAqB;IAClE,qBACE,8OAAC,iIAAA,CAAA,QAAK;;0BACJ,8OAAC,iIAAA,CAAA,eAAY;0BAAC;;;;;;0BACd,8OAAC,iIAAA,CAAA,cAAW;0BACV,cAAA,8OAAC,iIAAA,CAAA,WAAQ;;sCACP,8OAAC,iIAAA,CAAA,YAAS;4BAAC,WAAU;sCAAY;;;;;;sCACjC,8OAAC,iIAAA,CAAA,YAAS;4BAAC,WAAU;sCAAY;;;;;;sCACjC,8OAAC,iIAAA,CAAA,YAAS;sCAAC;;;;;;sCACX,8OAAC,iIAAA,CAAA,YAAS;sCAAC;;;;;;sCACX,8OAAC,iIAAA,CAAA,YAAS;4BAAC,WAAU;sCAAY;;;;;;sCACjC,8OAAC,iIAAA,CAAA,YAAS;sCAAC;;;;;;;;;;;;;;;;;0BAGf,8OAAC,iIAAA,CAAA,YAAS;0BACP,SAAS,GAAG,CAAC,CAAC,wBACb,8OAAC,iIAAA,CAAA,WAAQ;wBAAkB,WAAU;;0CACnC,8OAAC,iIAAA,CAAA,YAAS;0CACR,cAAA,8OAAC;oCACC,KAAK,QAAQ,KAAK;oCAClB,KAAK,QAAQ,IAAI;oCACjB,WAAU;;;;;;;;;;;0CAGd,8OAAC,iIAAA,CAAA,YAAS;gCAAC,WAAU;0CAAe,QAAQ,EAAE;;;;;;0CAC9C,8OAAC,iIAAA,CAAA,YAAS;0CAAE,QAAQ,IAAI;;;;;;0CACxB,8OAAC,iIAAA,CAAA,YAAS;0CAAE,QAAQ,MAAM;;;;;;0CAC1B,8OAAC,iIAAA,CAAA,YAAS;gCAAC,WAAU;0CAAa,QAAQ,SAAS;;;;;;0CACnD,8OAAC,iIAAA,CAAA,YAAS;0CAAE,QAAQ,MAAM;;;;;;;uBAZb,QAAQ,EAAE;;;;;;;;;;;;;;;;AAkBnC","debugId":null}},
    {"offset": {"line": 415, "column": 0}, "map": {"version":3,"sources":["file:///Users/lom2mba/Documents/Developer/next/fixtab-dashboard/src/app/change-serial-number/page.tsx"],"sourcesContent":["\"use client\";\n\nimport React, { useState, useEffect } from \"react\";\nimport {\n  Table,\n  TableBody,\n  TableCaption,\n  TableCell,\n  TableHead,\n  TableHeader,\n  TableRow,\n} from \"@/components/ui/table\";\nimport BranchTable from \"@/components/BranchTable\";\nimport ProductTable from \"@/components/ProductTable\";\nimport { useBreadcrumb } from \"@/context/BreadcrumbContext\";\n\ntype Branch = {\n  id: number;\n  name: string;\n  address: string;\n  city: string;\n  items: number;\n};\n\ntype Company = {\n  id: number;\n  name: string;\n  address: string;\n  branches: number;\n  branchFile: string | null;\n};\n\ntype Product = {\n  id: number;\n  name: string;\n  description: string;\n  inventory: number;\n  branch: string;\n  image: string;\n};\n\nexport default function ChangeSerialNumber() {\n  const { setBreadcrumb } = useBreadcrumb();\n  const [companies, setCompanies] = useState<Company[]>([]);\n  const [selectedCompany, setSelectedCompany] = useState<Company | null>(null);\n  const [branches, setBranches] = useState<Branch[] | null>(null);\n  const [products, setProducts] = useState<Product[] | null>(null);\n\n  // Fetch companies data on mount\n  useEffect(() => {\n    const fetchCompanies = async () => {\n      try {\n        const response = await fetch(\"/data/companies.json\");\n        if (!response.ok) {\n          throw new Error(\"Failed to fetch companies data\");\n        }\n        const data = await response.json();\n        setCompanies(data);\n      } catch (error) {\n        console.error(\"Error fetching companies:\", error);\n      }\n    };\n\n    fetchCompanies();\n  }, []);\n\n  // Update breadcrumb when selectedCompany changes\n  useEffect(() => {\n    setBreadcrumb(\n      selectedCompany ? `Companies -> ${selectedCompany.name}` : \"Companies\"\n    );\n  }, [selectedCompany, setBreadcrumb]);\n\n  // Function to handle company click and dynamically load branches\n  const handleCompanyClick = async (\n    branchFile: string | null,\n    company: Company\n  ) => {\n    if (!branchFile) {\n      // Stay on company page if no branchFile is provided\n      window.location.href = \"/change-serial-number\";\n      return;\n    }\n\n    try {\n      const response = await fetch(`/data/${branchFile}`);\n      if (!response.ok) {\n        throw new Error(\"Failed to fetch branch data\");\n      }\n      const branchData = await response.json();\n      setBranches(branchData);\n      setSelectedCompany(company); // Set the selected company\n    } catch (error) {\n      console.error(\"Failed to load branch data:\", error);\n      // Redirect to the homepage if fetching fails\n      window.location.href = \"/\";\n    }\n  };\n\n  // Function to handle branch click and dynamically load products\n  const handleBranchClick = async (productFile: string | null) => {\n    if (!productFile) {\n      console.error(\"No product file provided for this branch.\");\n      return;\n    }\n\n    console.log(`Fetching products from: /data/${productFile}`);\n\n    try {\n      const response = await fetch(`/data/${productFile}`);\n      if (!response.ok) {\n        throw new Error(\"Failed to fetch products data\");\n      }\n      const productData = await response.json();\n      console.log(\"Fetched products:\", productData);\n      setProducts(productData);\n    } catch (error) {\n      console.error(\"Failed to load products data:\", error);\n    }\n  };\n\n  // Function to go back up the tree\n  const handleBack = () => {\n    if (products) {\n      setProducts(null); // Go back to branches\n    } else if (branches) {\n      setBranches(null); // Go back to companies\n      setSelectedCompany(null);\n    }\n  };\n\n  return (\n    <main className=\"m-4\">\n      {products ? (\n        <>\n          <button\n            onClick={handleBack}\n            className=\"mb-2 px-2 py-1 text-xs bg-stone-500 text-white border border-stone-500 rounded hover:bg-black-500 hover:text-white transition cursor-pointer\"\n          >\n            Back\n          </button>\n          <ProductTable products={products.slice(0, 30)} /> {/* Limit to 30 items */}\n        </>\n      ) : branches ? (\n        <>\n          <button\n            onClick={handleBack}\n            className=\"mb-2 px-2 py-1 text-xs bg-stone-500 text-white border border-stone-500 rounded hover:bg-black-500 hover:text-white transition cursor-pointer\"\n          >\n            Back\n          </button>\n          <BranchTable branches={branches} onBranchClick={handleBranchClick} />\n        </>\n      ) : companies.length > 0 ? (\n        <Table>\n          <TableCaption>A list of your companies.</TableCaption>\n          <TableHeader>\n            <TableRow>\n              <TableHead>ID</TableHead>\n              <TableHead>Name</TableHead>\n              <TableHead>Address</TableHead>\n              <TableHead># of Branches</TableHead>\n            </TableRow>\n          </TableHeader>\n          <TableBody>\n            {companies.map((company) => (\n              <TableRow\n                key={company.id}\n                onClick={() => handleCompanyClick(company.branchFile, company)}\n                className=\"cursor-pointer\"\n              >\n                <TableCell>{company.id}</TableCell>\n                <TableCell>{company.name}</TableCell>\n                <TableCell>{company.address}</TableCell>\n                <TableCell>{company.branches}</TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      ) : (\n        <p>Loading companies...</p>\n      )}\n    </main>\n  );"],"names":[],"mappings":"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","debugId":null}}]
}